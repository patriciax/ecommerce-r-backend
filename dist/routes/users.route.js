"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const loginController_1 = require("../controllers/loginController");
const registerController_1 = require("../controllers/registerController");
const register_validator_1 = require("../validators/register.validator");
const passwordRestoreController_1 = require("../controllers/passwordRestoreController");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const userController_1 = require("../controllers/userController");
const router = (0, express_1.Router)();
const loginController = new loginController_1.LoginController();
const registerController = new registerController_1.RegisterController();
const passwordRestoreController = new passwordRestoreController_1.PasswordRestoreController();
const userController = new userController_1.UserController();
router.post('/login', loginController.login);
router.get('/user-info', auth_middleware_1.authMiddleware, userController.getUserInfo);
router.post('/register', register_validator_1.registerValidator, registerController.signup);
router.post('/resend-email-otp', registerController.resendEmailOtp);
router.post('/verify-email-otp', registerController.verifyEmailOtp);
router.post('/restore-pass/otp', passwordRestoreController.setRestorePasswordOtp);
router.post('/restore-pass/verify-otp', passwordRestoreController.verifyPasswordOtp);
router.patch('/restore-pass/update-password', passwordRestoreController.updatePassword);
router.patch('/update-profile', auth_middleware_1.authMiddleware, userController.updateProfile);
exports.default = router;
